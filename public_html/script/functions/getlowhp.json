{
	"name": "getLowHp",
	"ptname": "pegaVidaBaixa",
	"syntax": "int getLowHp ( void );",
	"description": {
		"long": "Analisa o campo de visão do gladiador e caso haja pelo menos um inimigo seleciona o que possuir menor quantidade de pontos de vida e retorna 1. Um inimigo selecionado desta maneira vira o alvo do gladiador, e todas funções que acessam informações sobre o alvo irão interagir com o gladiador selecionado. Caso não haja nenhum inimigo no campo de visão a função retorna 0.",
		"brief": "Procura um inimigo com menos vida."
	},
	"param": [
		{"name": "void", "description": "A função não recebe parâmetros."}
	],
	"treturn": "Retorna 0 caso não haja nenhum inimigo no campo de visão, caso contrário retorna 1.",
	"sample": "loop(){\n    if (getLowHp()){\n        if (getSpeed() > getTargetSpeed()){\n            if(getDistToTarget() <= 1)\n                attackMelee();\n            else\n                moveToTarget();\n        }\n        else\n            attackRanged(getTargetX(), getTargetY());\n    }\n    else\n        turnLeft(5);\n}",
	"explain": "No exemplo o gladiador fica girando até encontrar um inimigo, quando encontrar ele compara a sua velocidade com a do inimigo. Caso a do inimigo seja menor, o gladiador o persegue e desfere um ataque corpo-a-corpo quando alcançá-lo. Caso contrário realiza um ataque à distância.",
	"seealso": [
		"getDistToTarget",
		"attackRanged",
		"attackMelee",
		"getTargetX",
		"getTargetY",
		"getSpeed",
		"getTargetSpeed",
		"turnLeft",
		"moveToTarget",
		"getCloseEnemy",
		"getFarEnemy",
		"getHighHp"
	],
	"snippet": "int ${1:enemy} = getLowHp();"
}
