{
	"name": "getHit",
	"ptname": "fuiAcertado",
	"syntax": "int getHit ( void );",
	"description": {
		"long": "Verifica se o gladiador recebeu um ataque desde a última vez que a função foi chamada, retornando 1 em caso afirmativo ou 0 caso contrário.",
		"brief": "Descobre se o gladiador foi atacado."
	},
	"param": [
		{"name": "void", "description": "A função não recebe parâmetros."}
	],
	"treturn": "Retorna 1 caso o gladiador tenha recebido ataque no último intervalo de tempo, ou 0 caso contrário.",
	"sample": "loop(){\n    if (getHit()){\n        turnToLastHit();\n\t\tgetCloseEnemy();\n\r\n\t\tif(isTargetVisible())\n            attackRanged(getTargetX(), getTargetY());\n    }\n}",
	"explain": "No exemplo o gladiador fica aguardando até receber um ataque. Quando isso acontece ele se vira em direção ao atacante, e ao enxergar um alvo próximo ele desfere um ataque à distância contra ele.",
	"seealso": [
		"turnToAngle",
		"getLastHitAngle",
		"getCloseEnemy",
		"isTargetVisible",
		"attackRanged",
		"getTargetX",
		"getTargetY",
		"getLastHitTime"
	]
}
